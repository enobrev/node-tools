{"version":3,"sources":["../src/Logger.js"],"names":["require","Logger","constructor","oOptions","_indexedLogRewriter","sLevel","sMessage","oMeta","oOutput","action","index","request_hash","thread_hash","parent_hash","Object","keys","map","sKey","indexOf","sStrippedKey","replace","Globals","undefined","assign","length","_objectFromPath","aTransports","service","Error","Winston","level","setLevels","config","syslog","levels","rewriters","push","console","addConsole","addSyslog","createHash","update","getTime","digest","substring","metrics","start","start_timestamp","Date","toISOString","add","transports","Console","app_name","timestamp","colorize","json","removeConsole","remove","prototype","name","Syslog","localhost","protocol","path","formatter","_syslogFormatter","removeSyslog","addTag","tag","value","tags","setProcessIsError","is_error","setPurpose","purpose","oObject","sPath","mValue","split","reduce","oValue","iIndex","aSplit","JSON","stringify","meta","Buffer","toString","log","sSeverity","sAction","summary","iTimer","stop","join","_format","version","end_timestamp","indicator","getAll","error","context","d","i","n","w","e","c","a","em","dt","oTime","sActionOverride","label","startTimer","sLabel","stopTimer"],"mappings":"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","file":"Logger.js","sourcesContent":["    // @flow\n    export type LoggerOptions = {\n        service:        string,\n        thread_hash?:   string,\n        parent_hash?:   string,\n        console?:       boolean,\n        syslog?:        boolean\n    };\n\n    import crypto           from 'crypto';\n    import Winston          from 'winston';\n    import WinstonSyslog    from 'winston-syslog';\n    import Timer            from './Timer';\n    import TimeKeeper       from './TimeKeeper';\n\n    require('winston-syslog'); // This has to be here or Winston shits the bed on init\n\n    export default class Logger {\n        Winston:         Logger;\n        Globals:         {};\n\n        service:         string;\n        index:           number;\n        metrics:         Timer;\n        request_hash:    string;\n        thread_hash:     string;\n        parent_hash:     string;\n        tags:            {};\n        is_error:        boolean;\n        purpose:         string;\n        start_timestamp: string;\n\n        constructor(oOptions: LoggerOptions) {\n            this.Globals = {};\n            let aTransports = [];\n\n            if (!oOptions.service) {\n                throw new Error('Please set service name in options');\n            }\n\n            this.service = oOptions.service;\n\n            this.Winston = new Winston.Logger({\n                level:      'debug'\n            }).setLevels(Winston.config.syslog.levels);\n\n            this.Winston.rewriters.push(this._indexedLogRewriter);\n\n            if (oOptions.console) {\n                this.addConsole();\n            }\n\n            if (oOptions.syslog) {\n                this.addSyslog();\n            }\n\n            this.index = 0;\n\n            this.request_hash = crypto.createHash('sha1').update('' + TimeKeeper.getTime()).digest('hex').substring(0, 8);\n            this.thread_hash  = oOptions.thread_hash ? oOptions.thread_hash : this.request_hash;\n\n            if (oOptions.parent_hash) {\n                this.parent_hash = oOptions.parent_hash;\n            }\n\n            this.metrics = new Timer();\n            this.metrics.start('_REQUEST');\n\n            this.start_timestamp = new Date().toISOString();\n        }\n\n        addConsole() {\n            this.Winston.add(Winston.transports.Console, {\n                app_name:  'icon-server',\n                timestamp: true,\n                colorize:  true,\n                json:      true,\n                level:     'debug'\n            });\n        }\n\n        removeConsole() {\n            this.Winston.remove(Winston.transports.Console.prototype.name);\n        }\n\n        addSyslog() {\n            this.Winston.add(Winston.transports.Syslog, {\n                app_name:  this.service,\n                localhost: null, // Keep localhost out of syslog messages\n                protocol:  'unix-connect',\n                path:      '/dev/log',\n                formatter: Logger._syslogFormatter\n            });\n        }\n\n        removeSyslog() {\n            this.Winston.remove(Winston.transports.Syslog.prototype.name);\n        }\n\n        addTag(tag: string, value: mixed) {\n            this.tags[tag] = value;\n        }\n\n        setProcessIsError(is_error: boolean) {\n            this.is_error = is_error;\n        }\n\n        setPurpose(purpose: string) {\n            this.purpose = purpose;\n        }\n\n        static _objectFromPath (oObject: any, sPath: string, mValue: any) {\n            sPath.split('.').reduce((oValue: {}, sKey: string, iIndex: number, aSplit: any) => oValue[sKey] = iIndex === aSplit.length - 1 ? mValue : {}, oObject);\n        };\n\n        static _syslogFormatter (oOptions: any) {\n            return '@cee: ' + JSON.stringify(oOptions.meta, (sKey, mValue) => {\n                return mValue instanceof Buffer\n                    ? mValue.toString('base64')\n                    : mValue;\n            });\n        };\n\n        _indexedLogRewriter = (sLevel: string, sMessage: string, oMeta: any) => {\n            let oOutput: any = {\n                '--action': sMessage\n            };\n\n            if (oMeta) {\n                if (oMeta.action) {\n                    oOutput['--action'] = oMeta.action;\n                    delete oMeta.action;\n                }\n\n                this.index++;\n\n                oOutput['--i'] = this.index;\n                oOutput['--r'] = this.request_hash;\n                oOutput['--t'] = this.thread_hash;\n\n                if (this.parent_hash) {\n                    oOutput['--p'] = this.parent_hash;\n                }\n\n                // Move all \"--*\" items to root\n                Object.keys(oMeta).map(sKey => {\n                    if (sKey.indexOf('--') === 0) {\n                        oOutput[sKey] = oMeta[sKey];\n                        delete oMeta[sKey];\n                    }\n\n                    if (sKey.indexOf('#') === 0) {\n                        const sStrippedKey = sKey.replace('#', '');\n                        oMeta[sStrippedKey] = oMeta[sKey];\n                        delete oMeta[sKey];\n\n                        if (this.Globals[sStrippedKey] !== undefined) {\n                            Object.assign(this.Globals[sStrippedKey], oMeta[sStrippedKey]);\n                        } else {\n                            this.Globals[sStrippedKey] = oMeta[sStrippedKey];\n                        }\n                    }\n                });\n\n                if (Object.keys(oMeta).length > 0) {\n                    Logger._objectFromPath(oOutput, oOutput['--action'], oMeta);\n                }\n            }\n\n            return oOutput;\n        };\n\n        log(sSeverity: string, sAction: string, oMeta: any) {\n            this.Winston.log(sSeverity, sAction, oMeta);\n        }\n\n        summary() {\n            this.index++;\n            const iTimer = this.metrics.stop('_REQUEST');\n\n            this.Winston.log('info', [this.service, 'Summary'].join('.'), {\n                '--ms':          iTimer,\n                '--i':           this.index,\n                '--summary':     true,\n                _format:         'SSFSpan.DashedTrace',\n                version:         1,\n                start_timestamp: this.start_timestamp,\n                end_timestamp:   new Date().toISOString(),\n                service:         this.service,\n                indicator:       false,\n                metrics:         JSON.stringify(this.metrics.getAll()),\n                error:           this.is_error,\n                name:            this.purpose,\n                tags:            this.tags,\n                context:         this.Globals\n            })\n        }\n\n        d(sAction: string, oMeta: any) {\n            this.log('debug', sAction, oMeta);\n        }\n\n        i(sAction: string, oMeta: any) {\n            this.log('info', sAction, oMeta);\n        }\n\n        n(sAction: string, oMeta: any) {\n            this.log('notice', sAction, oMeta);\n        }\n\n        w(sAction: string, oMeta: any) {\n            this.log('warning', sAction, oMeta);\n        }\n\n        e(sAction: string, oMeta: any) {\n            this.log('error', sAction, oMeta);\n        }\n\n        c(sAction: string, oMeta: any) {\n            this.log('crit', sAction, oMeta);\n        }\n\n        a(sAction: string, oMeta: any) {\n            this.log('alert', sAction, oMeta);\n        }\n\n        em(sAction: string, oMeta: any) {\n            this.log('emerg', sAction, oMeta);\n        }\n\n        dt(oTime: TimeKeeper, sActionOverride: ?string) {\n            this.d(sActionOverride ? sActionOverride : oTime.label(), {'--ms': oTime.stop()});\n        }\n        \n        startTimer(sLabel: string) {\n            return this.metrics.start(sLabel);\n        }\n\n        stopTimer(sLabel: string) {\n            return this.metrics.stop(sLabel);\n        }\n    }"]}